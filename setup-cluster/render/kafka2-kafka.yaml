apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka2-kafka
  namespace: kafka
spec:
  selector:
    matchLabels:
      app: hyperledger
      role: kafka
      kafka-id: kafka2
      ns: kafka
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: hyperledger
        role: kafka
        kafka-id: kafka2
        ns: kafka
    spec:
      terminationGracePeriodSeconds: 120
      nodeSelector:
        kubernetes.io/hostname: ip-172-31-33-106
      containers:
        - name: kafka2-kafka
          image: hyperledger/fabric-kafka:x86_64-0.4.6
          env:
            - name: KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE
              value: "false"
            - name: KAFKA_MIN_INSYNC_REPLICAS
              value: "2"
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_MESSAGE_MAX_BYTES
              value: "103809024"  # 99 * 1024 * 1024 B
            - name: KAFKA_REPLICA_FETCH_MAX_BYTES
              value: "103809024"
            - name: KAFKA_BROKER_ID
              value: "2"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "10000"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper0.kafka:2181,zookeeper1.kafka:2181,zookeeper2.kafka:2181"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: "kafka2.kafka"
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
            - name: KAFKA_LOG_DIRS
              value: "/tmp/kafka-logs/data"
            - name: KAFKA_LOG_DIR
              value: "/tmp/kafka-logs/data"
            - name: KAFKA_CONTROLLED_SHUTDOWN_ENABLED
              value: "true"
            - name: KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS
              value: "15000"
            - name: KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS
              value: "15000"
          volumeMounts:
            - mountPath: /tmp/kafka-logs
              name: data
          lifecycle:
            preStop:
              exec:
                # SIGTERM triggers a quick exit; gracefully terminate instead
                command: ["/opt/kafka/bin/kafka-server-stop.sh"]
      volumes:
        - name: data
          hostPath:
              path: /data/kafka/data/kafka2
---
apiVersion: v1
kind: Service
metadata:
  name: kafka2
  namespace: kafka
spec:
 selector:
   app: hyperledger
   role: kafka
   kafka-id: kafka2
   ns: kafka
 clusterIP: None
 ports:
   - name: kafka-port1
     protocol: TCP
     port: 9092
     targetPort: 9092
     # nodePort: 32735
   - name: kafka-port2
     protocol: TCP
     port: 9093
     targetPort: 9093
     # nodePort: 32736
